<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.waxjx.largescale.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.waxjx.largescale.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="studentId" jdbcType="VARCHAR" property="studentid" />
    <result column="studentName" jdbcType="VARCHAR" property="studentname" />
    <result column="studentTelephone" jdbcType="VARCHAR" property="studenttelephone" />
    <result column="sex" jdbcType="SMALLINT" property="sex" />
    <result column="college" jdbcType="VARCHAR" property="college" />
    <result column="administrativeClass" jdbcType="VARCHAR" property="administrativeclass" />
    <result column="idNumber" jdbcType="VARCHAR" property="idnumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="studentStatus" jdbcType="SMALLINT" property="studentstatus" />
    <result column="educationalSystem" jdbcType="SMALLINT" property="educationalsystem" />
    <result column="enrollmentDate" jdbcType="DATE" property="enrollmentdate" />
    <result column="major" jdbcType="VARCHAR" property="major" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    studentId, studentName, studentTelephone, sex, college, administrativeClass, idNumber, 
    email, studentStatus, educationalSystem, enrollmentDate, major
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from student
    where studentId = #{studentid,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from student
    where studentId = #{studentid,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.waxjx.largescale.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into student (studentId, studentName, studentTelephone, 
      sex, college, administrativeClass, 
      idNumber, email, studentStatus, 
      educationalSystem, enrollmentDate, major
      )
    values (#{studentid,jdbcType=VARCHAR}, #{studentname,jdbcType=VARCHAR}, #{studenttelephone,jdbcType=VARCHAR}, 
      #{sex,jdbcType=SMALLINT}, #{college,jdbcType=VARCHAR}, #{administrativeclass,jdbcType=VARCHAR}, 
      #{idnumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{studentstatus,jdbcType=SMALLINT}, 
      #{educationalsystem,jdbcType=SMALLINT}, #{enrollmentdate,jdbcType=DATE}, #{major,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.waxjx.largescale.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        studentId,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="studenttelephone != null">
        studentTelephone,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="administrativeclass != null">
        administrativeClass,
      </if>
      <if test="idnumber != null">
        idNumber,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="studentstatus != null">
        studentStatus,
      </if>
      <if test="educationalsystem != null">
        educationalSystem,
      </if>
      <if test="enrollmentdate != null">
        enrollmentDate,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=VARCHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studenttelephone != null">
        #{studenttelephone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=SMALLINT},
      </if>
      <if test="college != null">
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="administrativeclass != null">
        #{administrativeclass,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="studentstatus != null">
        #{studentstatus,jdbcType=SMALLINT},
      </if>
      <if test="educationalsystem != null">
        #{educationalsystem,jdbcType=SMALLINT},
      </if>
      <if test="enrollmentdate != null">
        #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.waxjx.largescale.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    <set>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=VARCHAR},
      </if>
      <if test="studenttelephone != null">
        studentTelephone = #{studenttelephone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=SMALLINT},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="administrativeclass != null">
        administrativeClass = #{administrativeclass,jdbcType=VARCHAR},
      </if>
      <if test="idnumber != null">
        idNumber = #{idnumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="studentstatus != null">
        studentStatus = #{studentstatus,jdbcType=SMALLINT},
      </if>
      <if test="educationalsystem != null">
        educationalSystem = #{educationalsystem,jdbcType=SMALLINT},
      </if>
      <if test="enrollmentdate != null">
        enrollmentDate = #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.waxjx.largescale.model.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update student
    set studentName = #{studentname,jdbcType=VARCHAR},
      studentTelephone = #{studenttelephone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=SMALLINT},
      college = #{college,jdbcType=VARCHAR},
      administrativeClass = #{administrativeclass,jdbcType=VARCHAR},
      idNumber = #{idnumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      studentStatus = #{studentstatus,jdbcType=SMALLINT},
      educationalSystem = #{educationalsystem,jdbcType=SMALLINT},
      enrollmentDate = #{enrollmentdate,jdbcType=DATE},
      major = #{major,jdbcType=VARCHAR}
    where studentId = #{studentid,jdbcType=VARCHAR}
  </update>


  <!-- 新增查询所有学生的SQL -->
  <select id="selectAllStudents" resultType="com.waxjx.largescale.model.Student">
    select * from student
  </select>

<!--  根据学生name来查询学生-->
  <select id="selectByStudentName" parameterType="java.lang.String" resultType="com.waxjx.largescale.model.Student">
    select * from student where studentName = #{studentName, jdbcType=VARCHAR}
  </select>

  <!-- 查询学生及其所有课程成绩信息 -->
  <select id="selectStudentGradesWithCourseInfo" resultType="java.util.Map">
    SELECT 
        s.studentId,
        s.studentName,
        c.courseName,
        g.score as grade,
        c.semesterOffered as semester,
        c.credits,
        g.assessmentMethod,
        g.remarks
    FROM 
        student s
        LEFT JOIN grades g ON s.studentId = g.studentId
        LEFT JOIN courses c ON g.courseId = c.courseId
    WHERE 
        s.studentId = #{studentId}
    ORDER BY 
        c.semesterOffered DESC
  </select>

  <!-- 查询每个班级的平均成绩和最高分学生信息 -->
  <select id="selectClassAverageAndTopStudent" resultType="java.util.Map">
    SELECT 
        s.administrativeClass as class,
        ROUND(AVG(g.score), 2) as averageGrade,
        (
            SELECT s2.studentId
            FROM student s2
            JOIN grades g2 ON s2.studentId = g2.studentId
            WHERE s2.administrativeClass = s.administrativeClass
            ORDER BY g2.score DESC
            LIMIT 1
        ) as topStudentId,
        (
            SELECT s2.studentName
            FROM student s2
            JOIN grades g2 ON s2.studentId = g2.studentId
            WHERE s2.administrativeClass = s.administrativeClass
            ORDER BY g2.score DESC
            LIMIT 1
        ) as topStudentName,
        (
            SELECT g2.score
            FROM student s2
            JOIN grades g2 ON s2.studentId = g2.studentId
            WHERE s2.administrativeClass = s.administrativeClass
            ORDER BY g2.score DESC
            LIMIT 1
        ) as topStudentGrade
    FROM 
        student s
        JOIN grades g ON s.studentId = g.studentId
    GROUP BY 
        s.administrativeClass
    ORDER BY 
        averageGrade DESC
  </select>

</mapper>